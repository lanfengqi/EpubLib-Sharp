///////////////////////////////////////////////////////////
//  GuideReference.cs
//  Implementation of the Class GuideReference
//  Generated by Enterprise Architect
//  Created on:      02-五月-2012 16:21:01
//  Original author: lanfengqi
///////////////////////////////////////////////////////////



using System;
using nl.siegmann.epublib.domain;
using nl.siegmann.epublib.util;

namespace nl.siegmann.epublib.domain
{
    /// <summary>
    /// These are references to elements of the book's guide.
    /// </summary>
    /// <see>nl.siegmann.epublib.domain.Guide</see>
    [Serializable]
    public class GuideReference : TitledResourceReference
    {

        public static string ACKNOWLEDGEMENTS = "acknowledgements";
        public static string BIBLIOGRAPHY = "bibliography";
        public static string COLOPHON = "colophon";
        public static string COPYRIGHT_PAGE = "copyright-page";
        /// <summary>
        /// the book cover(s), jacket information, etc.
        /// </summary>
        public static string COVER = "cover";
        public static string DEDICATION = "dedication";
        /// <summary>
        /// an epigraph is a phrase, quotation, or poem that is set at the beginning of a
        /// document or component. source: http://en.wikipedia.
        /// org/wiki/Epigraph_%28literature%29
        /// </summary>
        public static string EPIGRAPH = "epigraph";
        public static string FOREWORD = "foreword";
        public static string GLOSSARY = "glossary";
        /// <summary>
        /// back-of-book style index
        /// </summary>
        public static string INDEX = "index";
        /// <summary>
        /// list of illustrations
        /// </summary>
        public static string LOI = "loi";
        /// <summary>
        /// list of tables
        /// </summary>
        public static string LOT = "lot";
        public static string NOTES = "notes";
        public static string PREFACE = "preface";
        public static readonly long serialVersionUID = -316179702440631834L;
        /// <summary>
        /// A page of content (e.g. "Chapter 1")
        /// </summary>
        public static string TEXT = "text";
        /// <summary>
        /// human-readable page with title, author, publisher, and other metadata
        /// </summary>
        public static string TITLE_PAGE = "title-page";
        /// <summary>
        /// Human-readable table of contents. Not to be confused the epub file table of
        /// contents
        /// </summary>
        public static string TOC = "toc";
        private string type;

        /// 
        /// <param name="resource"></param>
        public GuideReference(Resource resource)
            : this(resource, null)
        {

        }

        /// 
        /// <param name="resource"></param>
        /// <param name="title"></param>
        public GuideReference(Resource resource, string title)
            : base(resource, title)
        {

        }

        /// 
        /// <param name="resource"></param>
        /// <param name="type"></param>
        /// <param name="title"></param>
        public GuideReference(Resource resource, string type, string title)
            : this(resource, type, title, null)
        {

        }

        /// 
        /// <param name="resource"></param>
        /// <param name="type"></param>
        /// <param name="title"></param>
        /// <param name="fragmentId"></param>
        public GuideReference(Resource resource, string type, string title, string fragmentId)
            : base(resource, title, fragmentId)
        {
            this.type = StringUtil.isNotBlank(type) ? type.ToLower() : null;
        }

        /// <summary>
        /// 设置类型
        /// </summary>
        /// <param name="type"></param>
        public void setType(string type)
        {
            this.type = type;
        }

        /// <summary>
        /// 获取类型
        /// </summary>
        /// <returns></returns>
        public string getType()
        {
            return this.type;
        }
    }
}