///////////////////////////////////////////////////////////
//  GuideReference.cs
//  Implementation of the Class GuideReference
//  Generated by Enterprise Architect
//  Created on:      02-ÎåÔÂ-2012 16:21:01
//  Original author: lanfengqi
///////////////////////////////////////////////////////////



using System;
using nl.siegmann.epublib.domain;
namespace nl.siegmann.epublib.domain {
	/// <summary>
	/// These are references to elements of the book's guide.
	/// </summary>
	/// <see>nl.siegmann.epublib.domain.Guide</see>
	[Serializable]
	public class GuideReference : TitledResourceReference{

        private static string acknowledgements = "acknowledgements";
        private static string bibliography = "bibliography";
        private static string colophon = "colophon";
		private static string copyright_page = "copyright-page";
		/// <summary>
		/// the book cover(s), jacket information, etc.
		/// </summary>
        private static string cover = "cover";
        private static string dedication = "dedication";
		/// <summary>
		/// an epigraph is a phrase, quotation, or poem that is set at the beginning of a
		/// document or component. source: http://en.wikipedia.
		/// org/wiki/Epigraph_%28literature%29
		/// </summary>
        private static string epigraph = "epigraph";
        private static string foreword = "foreword";
        private static string glossary = "glossary";
		/// <summary>
		/// back-of-book style index
		/// </summary>
        private static string index = "index";
		/// <summary>
		/// list of illustrations
		/// </summary>
        private static string loi = "loi";
		/// <summary>
		/// list of tables
		/// </summary>
        private static string lot = "lot";
        private static string notes = "notes";
        private static string preface = "preface";
		private static readonly long serialVersionUID = -316179702440631834L;
		/// <summary>
		/// A page of content (e.g. "Chapter 1")
		/// </summary>
        private static string text = "text";
		/// <summary>
		/// human-readable page with title, author, publisher, and other metadata
		/// </summary>
		private static string title_page = "title-page";
		/// <summary>
		/// Human-readable table of contents. Not to be confused the epub file table of
		/// contents
		/// </summary>
		private static string toc = "toc";
		private string type;

		public GuideReference(){

		}

		~GuideReference(){

		}

		public override void Dispose(){

		}

		/// 
		/// <param name="resource"></param>
		public GuideReference(Resource resource){

		}

		/// 
		/// <param name="resource"></param>
		/// <param name="title"></param>
		public GuideReference(Resource resource, string title){

		}

		/// 
		/// <param name="resource"></param>
		/// <param name="type"></param>
		/// <param name="title"></param>
		public GuideReference(Resource resource, string type, string title){

		}

		/// 
		/// <param name="resource"></param>
		/// <param name="type"></param>
		/// <param name="title"></param>
		/// <param name="fragmentId"></param>
		public GuideReference(Resource resource, string type, string title, string fragmentId){

		}

		public  string Acknowledgements{
			get{
				return acknowledgements;
			}
			set{
				acknowledgements = value;
			}
		}

		public string  Bibliography{
			get { return bibliography; }
			set{
				bibliography = value;
			}
		}

		public string Colophon{
			get{
				return colophon;
			}
			set{
				colophon = value;
			}
		}

		public string Copyright_Page{
			get{
				return copyright_page;
			}
			set{
				copyright_page = value;
			}
		}

		public string Cover{
			get{
				return cover;
			}
			set{
				cover = value;
			}
		}

		public string Dedication{
			get{
				return dedication;
			}
			set{
				dedication = value;
			}
		}

		public string Epigraph{
			get{
				return epigraph;
			}
			set{
				epigraph = value;
			}
		}

		public string Foreword{
			get{
				return foreword;
			}
			set{
				foreword = value;
			}
		}

		public string getType(){

			return "";
		}

		public string Glossary{
			get{
				return glossary;
			}
			set{
				glossary = value;
			}
		}

		public string Index{
			get{
				return index;
			}
			set{
				index = value;
			}
		}

		public string LOI{
			get{
				return loi;
			}
			set{
				loi = value;
			}
		}

		public string LOT{
			get{
				return lot;
			}
			set{
				lot = value;
			}
		}

		public string Notes{
			get{
				return notes;
			}
			set{
				notes = value;
			}
		}

		public string Preface{
			get{
				return preface;
			}
			set{
				preface = value;
			}
		}

		/// 
		/// <param name="type"></param>
		public void setType(string type){

		}

		public string Text{
			get{
				return text;
			}
			set{
				text = value;
			}
		}

        public string Title_Page
        {
			get{
				return title_page;
			}
			set{
                title_page = value;
			}
		}

		public string TOC{
			get{
				return toc;
			}
			set{
                toc = value;
			}
		}

	}//end GuideReference

}//end namespace domain