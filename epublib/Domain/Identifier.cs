///////////////////////////////////////////////////////////
//  Identifier.cs
//  Implementation of the Class Identifier
//  Generated by Enterprise Architect
//  Created on:      02-ÎåÔÂ-2012 16:21:02
//  Original author: lanfengqi
///////////////////////////////////////////////////////////


using System;
using System.Collections.Generic;

namespace nl.siegmann.epublib.domain {
	/// <summary>
	/// A Book's identifier.  Defaults to a random UUID and scheme "UUID"
	/// </summary>
	[Serializable]
	public class Identifier {

		public interface Scheme {

			string ISBN{
				get;
				set;
			}

			string URI{
				get;
				set;
			}

			string URL{
				get;
				set;
			}

			string UUID{
				get;
				set;
			}
		}//end Scheme

		private bool bookId = false;
		private string scheme;
		private static readonly long serialVersionUID = 955949951416391810L;
		private string value;



		~Identifier(){

		}

		public virtual void Dispose(){

		}

		/// <summary>
		/// Creates an Identifier with as value a random UUID and scheme "UUID"
		/// </summary>
		public Identifier(){

		}

		/// 
		/// <param name="scheme"></param>
		/// <param name="value"></param>
		public Identifier(string scheme, string value){

		}

		/// 
		/// <param name="otherIdentifier"></param>
		public bool equals(Object otherIdentifier){

			return false;
		}

		/// <summary>
		/// The first identifier for which the bookId is true is made the bookId identifier.
		/// If no identifier has bookId == true then the first bookId identifier is written
		/// as the primary.
		/// </summary>
		/// <param name="identifiers"></param>
		public static Identifier getBookIdIdentifier(List<Identifier> identifiers){

			return null;
		}

		public string getScheme(){

			return "";
		}

		public string getValue(){

			return "";
		}

		public int hashCode(){

			return 0;
		}

		/// <summary>
		/// This bookId property allows the book creator to add multiple ids and tell the
		/// epubwriter which one to write out as the bookId.  The Dublin Core metadata spec
		/// allows multiple identifiers for a Book. The epub spec requires exactly one
		/// identifier to be marked as the book id.
		/// </summary>
		public bool isBookId(){

			return false;
		}

		/// 
		/// <param name="bookId"></param>
		public void setBookId(bool bookId){

		}

		/// 
		/// <param name="scheme"></param>
		public void setScheme(string scheme){

		}

		/// 
		/// <param name="value"></param>
		public void setValue(string value){

		}

		public string toString(){

			return "";
		}

	}//end Identifier

}//end namespace domain