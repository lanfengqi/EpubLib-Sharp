///////////////////////////////////////////////////////////
//  Date.cs
//  Implementation of the Class Date
//  Generated by Enterprise Architect
//  Created on:      02-ÎåÔÂ-2012 16:20:59
//  Original author: lanfengqi
///////////////////////////////////////////////////////////



using System;

namespace nl.siegmann.epublib.domain {
	/// <summary>
	/// A Date used by the book's metadata.  Examples: creation-date, modification-date,
	/// etc
	/// </summary>
	[Serializable]
	public class Date  {

		public enum Event : int {

			PUBLICATION,
			MODIFICATION,
			CREATION,
			value

		}//end Event

		private string dateString;
		private Event _event;
		private static readonly long serialVersionUID = 7533866830395120136L;

		public Date(){

		}

		~Date(){

		}

		public virtual void Dispose(){

		}

		/// 
		/// <param name="date"></param>
		public Date(Date date){

		}

		/// 
		/// <param name="dateString"></param>
		public Date(string dateString){

		}

		/// 
		/// <param name="date"></param>
		/// <param name="event"></param>
		public Date(Date date, Event _event){

		}

		/// 
		/// <param name="dateString"></param>
		/// <param name="event"></param>
		public Date(string dateString, Event _event){

		}

		/// 
		/// <param name="date"></param>
		/// <param name="event"></param>
		public Date(Date date, string _event){

		}

		/// 
		/// <param name="dateString"></param>
		/// <param name="event"></param>
	
		public Date(string dateString, string _event){

		}

		/// 
		/// <param name="dateString"></param>
		private static string checkDate(string dateString){

			return "";
		}

		public Event getEvent(){

			return Event.CREATION ;
		}

		public string getValue(){

			return "";
		}

		/// 
		/// <param name="event"></param>
		public void setEvent(Event _event){

		}

		public string toString(){

			return "";
		}

	}//end Date

}//end namespace domain