///////////////////////////////////////////////////////////
//  Date.cs
//  Implementation of the Class Date
//  Generated by Enterprise Architect
//  Created on:      02-ÎåÔÂ-2012 16:20:59
//  Original author: lanfengqi
///////////////////////////////////////////////////////////



using System;

namespace nl.siegmann.epublib.domain
{
    /// <summary>
    /// A Date used by the book's metadata.  Examples: creation-date, modification-date,
    /// etc
    /// </summary>
    [Serializable]
    public class Date
    {

        public enum Event : int
        {
            PUBLICATION = 1,
            MODIFICATION = 2,
            CREATION = 3

        }//end Event

        private string dateString;
        private Event _event;
        private static readonly long serialVersionUID = 7533866830395120136L;

        /// 
        /// <param name="date"></param>
        public Date(DateTime date)
        {
            this.dateString = date.ToShortDateString();
        }

        /// 
        /// <param name="dateString"></param>
        public Date(string dateString)
        {
            this.dateString = dateString;
        }

        /// 
        /// <param name="date"></param>
        /// <param name="event"></param>
        public Date(DateTime date, Event _event)
        {
            this.dateString = date.ToShortDateString();
            this._event = _event;
        }

        /// 
        /// <param name="dateString"></param>
        /// <param name="event"></param>
        public Date(string dateString, Event _event)
        {
            this.dateString = dateString;
            this._event = _event;
        }

        /// 
        /// <param name="dateString"></param>
        private static string checkDate(string dateString)
        {
            if (dateString == null)
            {
                throw new ArgumentNullException("Cannot create a date from a blank string");
            }
            return dateString;
        }

        public Event getEvent()
        {

            return _event;
        }

        public string getValue()
        {

            return dateString;
        }

        /// 
        /// <param name="event"></param>
        public void setEvent(Event _event)
        {
            this._event = _event;
        }

        public string toString()
        {
            if (_event == null)
            {
                return dateString;
            }
            return "" + _event + ":" + dateString;
        }

    }//end Date

}//end namespace domain