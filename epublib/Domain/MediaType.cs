///////////////////////////////////////////////////////////
//  MediaType.cs
//  Implementation of the Class MediaType
//  Generated by Enterprise Architect
//  Created on:      02-ÎåÔÂ-2012 16:21:02
//  Original author: lanfengqi
///////////////////////////////////////////////////////////


using System;
using System.Collections.ObjectModel;

namespace nl.siegmann.epublib.domain {
	/// <summary>
	/// MediaType is used to tell the type of content a resource is.  Examples of
	/// mediatypes are image/gif, text/css and application/xhtml+xml  All allowed
	/// mediaTypes are maintained bye the MediaTypeService.
	/// </summary>
	/// <see>nl.siegmann.epublib.service.MediatypeService</see>
    [Serializable]
	public class MediaType {

		private string defaultExtension;
		private Collection<String> extensions;
		private string name;
		private static readonly long serialVersionUID = -7256091153727506788L;

		public MediaType(){

		}

		~MediaType(){

		}

		public virtual void Dispose(){

		}

		/// 
		/// <param name="name"></param>
		/// <param name="defaultExtension"></param>
		public MediaType(string name, string defaultExtension){

		}

		/// 
		/// <param name="name"></param>
		/// <param name="defaultExtension"></param>
		/// <param name="extensions"></param>
		public MediaType(string name, string defaultExtension, String[] extensions){

		}

		/// 
		/// <param name="name"></param>
		/// <param name="defaultExtension"></param>
		/// <param name="extensions"></param>
		public MediaType(string name, string defaultExtension, Collection<String> extensions){

		}

		/// 
		/// <param name="otherMediaType"></param>
		public bool equals(Object otherMediaType){

			return false;
		}

		public string getDefaultExtension(){

			return "";
		}

		public Collection<String> getExtensions(){

			return null;
		}

		public string getName(){

			return "";
		}

		public int hashCode(){

			return 0;
		}

		public string toString(){

			return "";
		}

	}//end MediaType

}//end namespace domain