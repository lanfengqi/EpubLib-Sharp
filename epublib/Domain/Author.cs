///////////////////////////////////////////////////////////
//  Author.cs
//  Implementation of the Class Author
//  Generated by Enterprise Architect
//  Created on:      02-ÎåÔÂ-2012 16:20:55
//  Original author: lanfengqi
///////////////////////////////////////////////////////////


using System;
using nl.siegmann.epublib.domain;
namespace nl.siegmann.epublib.domain
{
    /// <summary>
    /// Represents one of the authors of the book
    /// </summary>
    [Serializable]
    public class Author
    {

        private string firstname;
        private string lastname;
        private Relator relator = Relator.AUTHOR;
        private static readonly long serialVersionUID = 6663408501416574200L;

        public Author()
        {

        }

        ~Author()
        {

        }

        public virtual void Dispose()
        {

        }

        /// 
        /// <param name="singleName"></param>
        public Author(string singleName)
        {

        }

        /// 
        /// <param name="firstname"></param>
        /// <param name="lastname"></param>
        public Author(string firstname, string lastname)
        {

        }

        /// 
        /// <param name="authorObject"></param>
        public bool equals(Object authorObject)
        {

            return false;
        }

        public string getFirstname()
        {

            return "";
        }

        public string getLastname()
        {

            return "";
        }

        public Relator getRelator()
        {
            return new Relator();
        }

        public int hashCode()
        {

            return 0;
        }

        /// 
        /// <param name="firstname"></param>
        public void setFirstname(string firstname)
        {

        }

        /// 
        /// <param name="lastname"></param>
        public void setLastname(string lastname)
        {

        }

        /// 
        /// <param name="relator"></param>
        public void setRelator(Relator relator)
        {

        }

        /// 
        /// <param name="code"></param>
        public Relator setRole(string code)
        {
            return new Relator();
        }

        public string toString()
        {

            return "";
        }

    }//end Author

}//end namespace domain