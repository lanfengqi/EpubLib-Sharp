///////////////////////////////////////////////////////////
//  EpubWriter.cs
//  Implementation of the Class EpubWriter
//  Generated by Enterprise Architect
//  Created on:      08-ÎåÔÂ-2012 15:47:29
//  Original author: paul
///////////////////////////////////////////////////////////


using System;
using System.IO;
using Ionic.Zip;
using nl.siegmann.epublib.epub;
using nl.siegmann.epublib.domain;
namespace nl.siegmann.epublib.epub {
	/// <summary>
	/// Generates an epub file. Not thread-safe, single use object.
	/// </summary>
	public class EpubWriter {

		private BookProcessor bookProcessor = BookProcessor.IDENTITY_BOOKPROCESSOR;
		/// <summary>
		/// package
		/// </summary>
		internal static readonly String EMPTY_NAMESPACE_PREFIX = "";
		//private static readonly Logger log = LoggerFactory.getLogger(EpubWriter.class);


		public EpubWriter(){

		}

		/// 
		/// <param name="bookProcessor"></param>
		public EpubWriter(BookProcessor bookProcessor){

		}

		/// 
		/// <param name="data"></param>
		private long calculateCrc(byte[] data){

			return 0;
		}

		public BookProcessor getBookProcessor(){

			return null;
		}

		internal String getNcxHref(){

			return "";
		}

		internal String getNcxId(){

			return "";
		}

		internal String getNcxMediaType(){

			return "";
		}

		/// 
		/// <param name="book"></param>
		private void initTOCResource(Book book){

		}

		/// 
		/// <param name="book"></param>
		private Book processBook(Book book){

			return null;
		}

		/// 
		/// <param name="bookProcessor"></param>
		public void setBookProcessor(BookProcessor bookProcessor){

		}

		/// 
		/// <param name="book"></param>
		/// <param name="out"></param>
		public void write(Book book, Stream stream){

		}

		/// <summary>
		/// Writes the META-INF/container.xml file.
		/// </summary>
		/// <param name="resultStream"></param>
		private void writeContainer(ZipOutputStream resultStream){

		}

		/// <summary>
		/// Stores the mimetype as an uncompressed file in the ZipOutputStream.
		/// </summary>
		/// <param name="resultStream"></param>
		private void writeMimeType(ZipOutputStream resultStream){

		}

		/// 
		/// <param name="book"></param>
		/// <param name="resultStream"></param>
		private void writePackageDocument(Book book, ZipOutputStream resultStream){

		}

		/// <summary>
		/// Writes the resource to the resultStream.
		/// </summary>
		/// <param name="resource"></param>
		/// <param name="resultStream"></param>
		private void writeResource(Resource resource, ZipOutputStream resultStream){

		}

		/// 
		/// <param name="book"></param>
		/// <param name="resultStream"></param>
		private void writeResources(Book book, ZipOutputStream resultStream){

		}

	}//end EpubWriter

}//end namespace epub